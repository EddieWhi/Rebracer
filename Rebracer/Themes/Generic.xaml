<!-- Stolen from Microsoft.VisualStudio.Shell.ViewManager.dll/Themes/GlyphButtonStyle.baml -->
<!-- Removed IsChecked property to simplify bindings & stolen types. -->
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:local="clr-namespace:WpfGrowlNotification"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:boc="clr-namespace:Microsoft.VisualStudio.PlatformUI.Shell.Controls;assembly=Microsoft.VisualStudio.Shell.ViewManager,Version=12.0.0.0,Culture=neutral,PublicKeyToken=b03f5f7f11d50a3a">
	<Style x:Key="{x:Type local:GlyphButton}" TargetType="{x:Type local:GlyphButton}">
		<Setter Property="FrameworkElement.Width" Value="{Binding Path=ActualHeight, RelativeSource={RelativeSource Self}}" />
		<Setter Property="TextElement.Foreground" Value="{Binding Path=GlyphForeground, RelativeSource={RelativeSource Self}}" />
		<Setter Property="Control.Background" Value="#00FFFFFF" />
		<Setter Property="Control.BorderBrush" Value="#00FFFFFF" />
		<Setter Property="Control.BorderThickness" Value="1" />
		<Setter Property="UIElement.Focusable" Value="False" />
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type local:GlyphButton}">
					<Border Name="Border" Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}">
						<ContentPresenter />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="UIElement.IsMouseOver" Value="True">
							<Setter TargetName="Border" Value="{Binding HoverBackground, RelativeSource={RelativeSource TemplatedParent}}" Property="Border.Background" />
							<Setter TargetName="Border" Value="{Binding HoverBorderBrush, RelativeSource={RelativeSource TemplatedParent}}" Property="Border.BorderBrush" />
							<Setter TargetName="Border" Value="{Binding HoverBorderThickness, RelativeSource={RelativeSource TemplatedParent}}" Property="Border.BorderThickness" />
							<Setter Value="{Binding HoverForeground, RelativeSource={RelativeSource Self}}" Property="TextElement.Foreground" />
						</Trigger>
						<DataTrigger Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}}">
							<Setter TargetName="Border" Value="{Binding PressedBackground, RelativeSource={RelativeSource TemplatedParent}}" Property="Border.Background" />
							<Setter TargetName="Border" Value="{Binding PressedBorderBrush, RelativeSource={RelativeSource TemplatedParent}}" Property="Border.BorderBrush" />
							<Setter TargetName="Border" Value="{Binding PressedBorderThickness, RelativeSource={RelativeSource TemplatedParent}}" Property="Border.BorderThickness" />
							<Setter Value="{Binding PressedForeground, RelativeSource={RelativeSource Self}}" Property="TextElement.Foreground" />
						</DataTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>